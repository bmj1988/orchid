// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  name           String?
  username       String?
  hashedPassword String
  preferences    Int?
  img            String?
  walls          Wall[]
  comments       Comment[]
  likes          Like[]
  quotes         Quote[]
  followedBy     Follows[] @relation("followedBy")
  following      Follows[] @relation("following")
  Group          Group[]
}

model Wall {
  id     Int     @id @default(autoincrement())
  access String  @default("public")
  name   String
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  group  Group?
  quotes Quote[]
}

model Quote {
  id        Int       @id @default(autoincrement())
  wall      Wall      @relation(fields: [wallId], references: [id])
  wallId    Int
  content   String
  author    String
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  postedOn  DateTime  @default(now())
  updatedOn DateTime  @default(now())
  Comment   Comment[]
  likes     Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  quote     Quote    @relation(fields: [quoteId], references: [id])
  quoteId   Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  postedOn  DateTime @default(now())
  updatedOn DateTime @default(now())
}

model Like {
  id       Int      @id @default(autoincrement())
  quote    Quote    @relation(fields: [quoteId], references: [id])
  quoteId  Int
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  postedOn DateTime @default(now())
}

model Follows {
  followedBy   User @relation("followedBy", fields: [followedById], references: [id])
  followedById Int
  following    User @relation("following", fields: [followingId], references: [id])
  followingId  Int

  @@id([followingId, followedById])
}

model Group {
  id     Int    @id @default(autoincrement())
  users  User[]
  wall   Wall   @relation(fields: [wallId], references: [id])
  wallId Int    @unique
}
